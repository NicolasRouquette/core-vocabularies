apply plugin: 'maven-publish'
apply plugin: 'signing'	

/* 
 * The Maven coordinates for the project artifact
 */
ext.title = "Core Vocabularies"
description='The set of core vocabularies'
group = 'io.opencaesar.ontologies'
version = '2.4.0'

/* 
 * The Gradle task dependencies 
 */
buildscript {
	repositories {
		mavenLocal()
		maven { url 'https://dl.bintray.com/opencaesar/adapters' }
		maven { url 'https://dl.bintray.com/opencaesar/owl-tools' }
		maven { url 'https://dl.bintray.com/opencaesar/oml-tools' }
		maven { url 'https://dl.bintray.com/opencaesar/oml' }
		mavenCentral()
	}
	dependencies {
		classpath 'io.opencaesar.adapters:oml2owl-gradle:0.8.+'
		classpath 'io.opencaesar.oml:oml-bikeshed-gradle:0.8.+'
	}
}

/*
 * A task to generate Bikeshed specification for the OML catalog
 */
task omlToBikeshed(type: io.opencaesar.oml.bikeshed.Oml2BikeshedTask) {
	// OML catalog
	inputCatalogPath = file('catalog.xml')
	// OWL folder
	outputFolderPath = file('build/bikeshed')
	// Publish URL
	publishUrl = 'https://opencaesar.github.io/core-vocabularies/'
}

/*
 * A task to generate the Bikeshed documentations in HTML
 */
import org.gradle.internal.os.OperatingSystem
task generateDocs(dependsOn: omlToBikeshed) {
	doLast {
		if (OperatingSystem.current().isWindows()) {
			exec { commandLine 'build/bikeshed/publish.bat' }
		} else {
			exec { commandLine 'chmod', '+x', 'build/bikeshed/publish.sh' }
			exec { commandLine 'build/bikeshed/publish.sh' }
		}
	}
}

/*
 * A task to convert the OML catalog to OWL catalog
 */
task omlToOwl(type:io.opencaesar.oml2owl.Oml2OwlTask) {
	// OML catalog
	inputCatalogPath = file('catalog.xml')
	// OWL catalog
	outputCatalogPath = file('build/owl/catalog.xml')
}

/*
 * A task to build the project, which executes several tasks together
 */
build.dependsOn omlToOwl

/*
 * Publish to Maven spec
 */

task omlZip(type: Zip) {
	from file('src/oml')
	include "**/*.oml"
	destinationDirectory = file('build/libs')
	archiveBaseName = project.name
	archiveVersion = project.version
}

publishToMavenLocal.dependsOn omlZip

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "melaasar"
            name "Maged Elaasar"
            email "melaasar@gmail.com"
        }
    }

    scm {
        url 'https://github.com/opencaesar/'+rootProject.name
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            artifact omlZip
			pom {
				withXml {
	                def root = asNode()
	                root.appendNode('name', project.ext.title)
	                root.appendNode('description', project.description)
	                root.appendNode('url', 'https://github.com/opencaesar/'+rootProject.name)
	                root.children().last() + pomConfig
	            }
			}        
		}
    }
    repositories {
        maven {
            name = "sonatype"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(new String(pgpSigningKey.decodeBase64()), pgpSigningPassword)
    sign publishing.publications
}
