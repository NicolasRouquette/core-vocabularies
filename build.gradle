/* 
 * The Maven coordinates for the project artifact
 */
ext.title = "Core Vocabularies"
description='The set of core vocabularies'
group = 'io.opencaesar.ontologies'
version = '2.4.1'

apply from: "${rootDir}/gradle/maven-deployment.gradle"

/* 
 * The Gradle task dependencies 
 */
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'io.opencaesar.adapters:oml2owl-gradle:0.8.+'
        classpath 'io.opencaesar.oml:oml-bikeshed-gradle:0.8.+'
    }
}

/*
 * A task to generate Bikeshed specification for the OML catalog
 */
task omlToBikeshed(type: io.opencaesar.oml.bikeshed.Oml2BikeshedTask) {
    // OML catalog
    inputCatalogPath = file('catalog.xml')
    // OWL folder
    outputFolderPath = file('build/bikeshed')
    // Publish URL
    publishUrl = 'https://opencaesar.github.io/core-vocabularies/'
}

/*
 * A task to generate the Bikeshed documentations in HTML
 */
import org.gradle.internal.os.OperatingSystem
task generateDocs(dependsOn: omlToBikeshed) {
    doLast {
        if (OperatingSystem.current().isWindows()) {
            exec { commandLine 'build/bikeshed/publish.bat' }
        } else {
            exec { commandLine 'chmod', '+x', 'build/bikeshed/publish.sh' }
            exec { commandLine 'build/bikeshed/publish.sh' }
        }
    }
}

/*
 * A task to convert the OML catalog to OWL catalog
 */
task omlToOwl(type:io.opencaesar.oml2owl.Oml2OwlTask) {
    // OML catalog
    inputCatalogPath = file('catalog.xml')
    // OWL catalog
    outputCatalogPath = file('build/owl/catalog.xml')
}

/*
 * A task to build the project, which executes several tasks together
 */
tasks.named('build') {
    dependsOn omlToOwl
}

/*
 * Publish artifacts
 */
task omlZip(type:Zip) {
    from file('src/oml')
    include "**/*.oml"
    destinationDirectory = file('build/libs')
    archiveBaseName = project.name
    archiveVersion = project.version
}

publishing.publications.maven.artifact omlZip